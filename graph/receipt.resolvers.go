package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/bishal-dd/go-server/graph/model"
)

// CreateReceipt is the resolver for the createReceipt field.
func (r *mutationResolver) CreateReceipt(ctx context.Context, input model.NewReceipt) (*model.Receipt, error) {
	panic(fmt.Errorf("not implemented: CreateReceipt - createReceipt"))
}

// Receipts is the resolver for the receipts field.
func (r *queryResolver) Receipts(ctx context.Context) ([]*model.Receipt, error) {
	panic(fmt.Errorf("not implemented: Receipts - receipts"))
}

// User is the resolver for the user field.
func (r *receiptResolver) User(ctx context.Context, obj *model.Receipt) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Receipt returns ReceiptResolver implementation.
func (r *Resolver) Receipt() ReceiptResolver { return &receiptResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type receiptResolver struct{ *Resolver }
